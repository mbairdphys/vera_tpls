# This will configure and build hdf5
# User can configure the source path by speficfying HDF5_SRC_DIR
#    the download path by specifying HDF5_URL, or the installed 
#    location by specifying HDF5_INSTALL_DIR


# Intialize download/src/install vars
SET( HDF5_BUILD_DIR "${CMAKE_BINARY_DIR}/HDF5-prefix/src/HDF5-build" )
IF ( HDF5_URL ) 
    MESSAGE_TPL("   HDF5_URL = ${HDF5_URL}")
    SET( HDF5_CMAKE_URL            "${HDF5_URL}"       )
    SET( HDF5_CMAKE_DOWNLOAD_DIR   "${HDF5_BUILD_DIR}" )
    SET( HDF5_CMAKE_SOURCE_DIR     "${HDF5_BUILD_DIR}" )
    SET( HDF5_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/hdf5-${HDF5_VERSION}" )
    SET( CMAKE_BUILD_HDF5 TRUE )
ELSEIF ( HDF5_SRC_DIR )
    MESSAGE_TPL("   HDF5_SRC_DIR = ${HDF5_SRC_DIR}")
    SET( HDF5_CMAKE_URL            "${HDF5_SRC_DIR}"   )
    SET( HDF5_CMAKE_DOWNLOAD_DIR   "${HDF5_BUILD_DIR}" )
    SET( HDF5_CMAKE_SOURCE_DIR     "${HDF5_BUILD_DIR}" )
    SET( HDF5_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/hdf5-${HDF5_VERSION}" )
    #SET( CMAKE_BUILD_HDF5 TRUE )
ELSEIF ( HDF5_INSTALL_DIR ) 
    SET( HDF5_CMAKE_INSTALL_DIR "${HDF5_INSTALL_DIR}" )
    SET( CMAKE_BUILD_HDF5 FALSE )
ELSE()
    MESSAGE(FATAL_ERROR "Please specify HDF5_SRC_DIR")
ENDIF()


# Configure hdf5
IF(BUILD_SERIAL_TPLS)
IF ( CMAKE_BUILD_HDF5 )
   FILE( MAKE_DIRECTORY "${HDF5_CMAKE_INSTALL_DIR}_serial" )
   SET( HDF5_INSTALL_DIR "${HDF5_CMAKE_INSTALL_DIR}_serial" )
   MESSAGE_TPL( "   HDF5_INSTALL_DIR = ${HDF5_INSTALL_DIR}_serial" )
   FILE( APPEND "${CMAKE_INSTALL_PREFIX}/TPLs.cmake" "SET(HDF5_INSTALL_DIR \"${HDF5_INSTALL_DIR}_serial\")\n" )
    SET( CONFIGURE_OPTIONS )
    IF ( HDF5_DISABLE_CXX )
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --disable-cxx )
    ELSE()
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-cxx )
    ENDIF()
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-fortran )
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --disable-parallel --enable-unsupported )
    PRINT_VAR(ZLIB_INCLUDE_DIR)
    PRINT_VAR(ZLIB_LIB_DIR)
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-zlib=${ZLIB_INCLUDE_DIR},${ZLIB_LIB_DIR} )
    IF ( ${CMAKE_BUILD_TYPE} STREQUAL "Debug" )
        SET(CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-build-mode=debug )
    ELSEIF ( ${CMAKE_BUILD_TYPE} STREQUAL "Release" )
        SET(CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-build-mode=production )
    ELSE()
        MESSAGE ( FATAL_ERROR "Unknown CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}" )
    ENDIF()
    IF ( ENABLE_SHARED )
        LIST(APPEND CONFIGURE_OPTIONS --enable-shared=yes --enable-static=no )
    ELSE()
        LIST(APPEND CONFIGURE_OPTIONS --enable-shared=no --enable-static=yes )
    ENDIF()
ENDIF()
# Build hdf5
#PRINT_VAR(CMAKE_BUILD_HDF5)
IF ( CMAKE_BUILD_HDF5 )
    EXTERNALPROJECT_ADD(
        HDF5
        URL                 "${HDF5_CMAKE_URL}"
        DOWNLOAD_DIR        "${HDF5_CMAKE_DOWNLOAD_DIR}"
        SOURCE_DIR          "${HDF5_CMAKE_SOURCE_DIR}"
        UPDATE_COMMAND      ""
        CONFIGURE_COMMAND   ${HDF5_CMAKE_SOURCE_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX}/hdf5-${HDF5_VERSION}_serial ${CONFIGURE_OPTIONS} ${ENV_VARS}
        BUILD_COMMAND       make -j ${PROCS_INSTALL} VERBOSE=1
        BUILD_IN_SOURCE     0
        INSTALL_COMMAND    make install -j ${PROCS_INSTALL} VERBOSE=1
        DEPENDS             ZLIB
        LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1
        LOG_TEST 1   LOG_INSTALL 1
    )
    ADD_TPL_SAVE_LOGS( HDF5 )
    ADD_TPL_CLEAN( HDF5 )
ELSE()
#    ADD_TPL_EMPTY( HDF5 )
ENDIF()
ELSE()
IF ( CMAKE_BUILD_HDF5 )
   FILE( MAKE_DIRECTORY "${HDF5_CMAKE_INSTALL_DIR}" )
   SET( HDF5_INSTALL_DIR "${HDF5_CMAKE_INSTALL_DIR}" )
   MESSAGE_TPL( "   HDF5_INSTALL_DIR = ${HDF5_INSTALL_DIR}" )
   FILE( APPEND "${CMAKE_INSTALL_PREFIX}/TPLs.cmake" "SET(HDF5_INSTALL_DIR \"${HDF5_INSTALL_DIR}\")\n" )
    SET( CONFIGURE_OPTIONS )
    IF ( HDF5_DISABLE_CXX )
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --disable-cxx )
    ELSE()
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-cxx )
    ENDIF()
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-fortran )
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --disable-parallel )
    PRINT_VAR(ZLIB_INCLUDE_DIR)
    PRINT_VAR(ZLIB_LIB_DIR)
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-zlib=${ZLIB_INCLUDE_DIR},${ZLIB_LIB_DIR} )
    IF ( ${CMAKE_BUILD_TYPE} STREQUAL "Debug" )
        SET(CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-build-mode=debug )
    ELSEIF ( ${CMAKE_BUILD_TYPE} STREQUAL "Release" )
        SET(CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-build-mode=production )
    ELSE()
        MESSAGE ( FATAL_ERROR "Unknown CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}" )
    ENDIF()
    IF ( ENABLE_SHARED )
        LIST(APPEND CONFIGURE_OPTIONS --enable-shared=yes --enable-static=no )
    ELSE()
        LIST(APPEND CONFIGURE_OPTIONS --enable-shared=no --enable-static=yes )
    ENDIF()
ENDIF()
SET(ENV_PARALLEL_VARS CC=${CMAKE_C_COMPILER} CXX=mpicxx FC=${CMAKE_Fortran_COMPILER} F77=${CMAKE_Fortran_COMPILER} F90=${CMAKE_Fortran_COMPILER} CFLAGS=${CMAKE_C_FLAGS} CXXFLAGS=${CMAKE_CXX_FLAGS} FFLAGS=${CMAKE_Fortran_FLAGS} FCFLAGS=${CMAKE_Fortran_FLAGS} F90FLAGS=${CMAKE_Fortran_FLAGS} F77FLAGS=${CMAKE_Fortran_FLAGS} )
SET(HDF5_BUILD_CMND
     "${PROJECT_SOURCE_DIR}/remove_link_flags.sh" "${HDF5_BUILD_DIR}" )
PRINT_VAR(HDF5_BUILD_CMND)
PRINT_VAR(ENV_PARALLEL_VARS)
# Build hdf5
#PRINT_VAR(CMAKE_BUILD_HDF5)
IF ( CMAKE_BUILD_HDF5 )
    EXTERNALPROJECT_ADD(
        HDF5
        URL                 "${HDF5_CMAKE_URL}"
        DOWNLOAD_DIR        "${HDF5_CMAKE_DOWNLOAD_DIR}"
        SOURCE_DIR          "${HDF5_CMAKE_SOURCE_DIR}"
        UPDATE_COMMAND      ""
        CONFIGURE_COMMAND   ${HDF5_CMAKE_SOURCE_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX}/hdf5-${HDF5_VERSION} ${CONFIGURE_OPTIONS} ${ENV_VARS}
#        BUILD_COMMAND       make -j ${PROCS_INSTALL} VERBOSE=1
        BUILD_COMMAND       ${HDF5_BUILD_CMND}
        BUILD_IN_SOURCE     0
        INSTALL_COMMAND    make install -j ${PROCS_INSTALL} VERBOSE=1
        DEPENDS             ZLIB
        LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1
        LOG_TEST 1   LOG_INSTALL 1
    )
    ADD_TPL_SAVE_LOGS( HDF5 )
    ADD_TPL_CLEAN( HDF5 )
ELSE()
#    ADD_TPL_EMPTY( HDF5 )
ENDIF()
ENDIF()
